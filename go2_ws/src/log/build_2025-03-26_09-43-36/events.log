[0.000000] (-) TimerEvent: {}
[0.004099] (movement) JobQueued: {'identifier': 'movement', 'dependencies': OrderedDict()}
[0.004190] (movement) JobStarted: {'identifier': 'movement'}
[0.021720] (movement) JobProgress: {'identifier': 'movement', 'progress': 'cmake'}
[0.023336] (movement) JobProgress: {'identifier': 'movement', 'progress': 'build'}
[0.028107] (movement) Command: {'cmd': ['/usr/bin/cmake', '--build', '/ws/go2_ws/src/build/movement', '--', '-j8', '-l8'], 'cwd': '/ws/go2_ws/src/build/movement', 'env': OrderedDict([('CXXFLAGS', '-march=armv8.3-a'), ('HOSTNAME', 'localhost'), ('GIT_ASKPASS', '/root/.vscode-server/bin/ddc367ed5c8936efe395cffeec279b04ffd7db78/extensions/git/dist/askpass.sh'), ('SHLVL', '2'), ('LD_LIBRARY_PATH', '/root/unitree_ros2/cyclonedds_ws/install/unitree_hg/lib:/root/unitree_ros2/cyclonedds_ws/install/unitree_go/lib:/root/unitree_ros2/cyclonedds_ws/install/unitree_api/lib:/root/unitree_ros2/cyclonedds_ws/install/rmw_cyclonedds_cpp/lib:/root/unitree_ros2/cyclonedds_ws/install/cyclonedds/lib:/opt/ros/foxy/opt/yaml_cpp_vendor/lib:/opt/ros/foxy/opt/rviz_ogre_vendor/lib:/opt/ros/foxy/lib/aarch64-linux-gnu:/opt/ros/foxy/lib'), ('BROWSER', '/root/.vscode-server/bin/ddc367ed5c8936efe395cffeec279b04ffd7db78/bin/helpers/browser.sh'), ('HOME', '/root'), ('CYCLONEDDS_URI', '<CycloneDDS><Domain><General><Interfaces>\n                            <NetworkInterface name="enp3s0" priority="default" multicast="default" />\n                        </Interfaces></General></Domain></CycloneDDS>'), ('TERM_PROGRAM_VERSION', '1.98.2'), ('VSCODE_IPC_HOOK_CLI', '/tmp/vscode-ipc-0b8dfde0-6a75-42ac-a36d-3453a91499ab.sock'), ('ROS_PYTHON_VERSION', '3'), ('VSCODE_GIT_ASKPASS_MAIN', '/root/.vscode-server/bin/ddc367ed5c8936efe395cffeec279b04ffd7db78/extensions/git/dist/askpass-main.js'), ('VSCODE_GIT_ASKPASS_NODE', '/root/.vscode-server/bin/ddc367ed5c8936efe395cffeec279b04ffd7db78/node'), ('COLORTERM', 'truecolor'), ('REMOTE_CONTAINERS', 'true'), ('COLCON_PREFIX_PATH', '/root/unitree_ros2/cyclonedds_ws/install'), ('ROS_DISTRO', 'foxy'), ('REMOTE_CONTAINERS_IPC', '/tmp/vscode-remote-containers-ipc-f77b5146-9eb0-4432-b82f-80429b5c6722.sock'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('PKG_CONFIG_PATH', '/root/unitree_ros2/cyclonedds_ws/install/cyclonedds/lib/aarch64-linux-gnu/pkgconfig:/root/unitree_ros2/cyclonedds_ws/install/cyclonedds/lib/pkgconfig'), ('TERM', 'xterm-256color'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/root/unitree_ros2/cyclonedds_ws/install/cyclonedds/bin:/opt/ros/foxy/bin:/root/.vscode-server/bin/ddc367ed5c8936efe395cffeec279b04ffd7db78/bin/remote-cli:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/root/.vscode-server/data/User/globalStorage/github.copilot-chat/debugCommand'), ('CFLAGS', '-march=armv8.3-a'), ('REMOTE_CONTAINERS_SOCKETS', '["/tmp/vscode-ssh-auth-f77b5146-9eb0-4432-b82f-80429b5c6722.sock"]'), ('DISPLAY', ':0'), ('LANG', 'C.UTF-8'), ('RMW_IMPLEMENTATION', 'rmw_cyclonedds_cpp'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('VSCODE_GIT_IPC_HANDLE', '/tmp/vscode-git-f9253ddb8b.sock'), ('TERM_PROGRAM', 'vscode'), ('SSH_AUTH_SOCK', '/tmp/vscode-ssh-auth-f77b5146-9eb0-4432-b82f-80429b5c6722.sock'), ('AMENT_PREFIX_PATH', '/root/unitree_ros2/cyclonedds_ws/install/unitree_hg:/root/unitree_ros2/cyclonedds_ws/install/unitree_go:/root/unitree_ros2/cyclonedds_ws/install/unitree_api:/root/unitree_ros2/cyclonedds_ws/install/rmw_cyclonedds_cpp:/opt/ros/foxy'), ('SHELL', '/bin/bash'), ('VSCODE_GIT_ASKPASS_EXTRA_ARGS', ''), ('PWD', '/ws/go2_ws/src/build/movement'), ('VNC_RESOLUTION', '1080x720'), ('LC_ALL', 'C.UTF-8'), ('PYTHONPATH', '/root/unitree_ros2/cyclonedds_ws/install/unitree_hg/lib/python3.8/site-packages:/root/unitree_ros2/cyclonedds_ws/install/unitree_go/lib/python3.8/site-packages:/root/unitree_ros2/cyclonedds_ws/install/unitree_api/lib/python3.8/site-packages:/opt/ros/foxy/lib/python3.8/site-packages'), ('COLCON', '1'), ('CMAKE_PREFIX_PATH', '/root/unitree_ros2/cyclonedds_ws/install/unitree_hg:/root/unitree_ros2/cyclonedds_ws/install/unitree_go:/root/unitree_ros2/cyclonedds_ws/install/unitree_api:/root/unitree_ros2/cyclonedds_ws/install/rmw_cyclonedds_cpp:/root/unitree_ros2/cyclonedds_ws/install/cyclonedds:/opt/ros/foxy')]), 'shell': False}
[0.099809] (-) TimerEvent: {}
[0.179510] (movement) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target gamepad_controller\x1b[0m\n'}
[0.200734] (-) TimerEvent: {}
[0.220280] (movement) StdoutLine: {'line': b'[ 33%] Built target keyboard_control\n'}
[0.222967] (movement) StdoutLine: {'line': b'[ 66%] Built target back_and_forth\n'}
[0.301651] (-) TimerEvent: {}
[0.402657] (-) TimerEvent: {}
[0.450932] (movement) StdoutLine: {'line': b'[ 77%] \x1b[32mBuilding CXX object CMakeFiles/gamepad_controller.dir/src/gamepad_controller.cpp.o\x1b[0m\n'}
[0.504729] (-) TimerEvent: {}
[0.608875] (-) TimerEvent: {}
[0.709654] (-) TimerEvent: {}
[0.810770] (-) TimerEvent: {}
[0.913262] (-) TimerEvent: {}
[1.015430] (-) TimerEvent: {}
[1.118272] (-) TimerEvent: {}
[1.218970] (-) TimerEvent: {}
[1.320928] (-) TimerEvent: {}
[1.424282] (-) TimerEvent: {}
[1.528374] (-) TimerEvent: {}
[1.630389] (-) TimerEvent: {}
[1.731837] (-) TimerEvent: {}
[1.832822] (-) TimerEvent: {}
[1.933642] (-) TimerEvent: {}
[2.035629] (-) TimerEvent: {}
[2.079406] (movement) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/ws/go2_ws/src/movement/src/gamepad_controller.cpp:5\x1b[m\x1b[K:\n'}
[2.084604] (movement) StderrLine: {'line': b'\x1b[01m\x1b[K/ws/go2_ws/src/movement/include/gamepad_controller.h:36:22:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[2.085007] (movement) StderrLine: {'line': b'   36 |     void joyCallback(\x1b[01;31m\x1b[Ksensor_msgs\x1b[m\x1b[K::msg::Joy::SharedPtr data)\n'}
[2.085135] (movement) StderrLine: {'line': b'      |                      \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.085252] (movement) StderrLine: {'line': b'\x1b[01m\x1b[K/ws/go2_ws/src/movement/include/gamepad_controller.h:36:55:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K,\x1b[m\x1b[K\xe2\x80\x99 or \xe2\x80\x98\x1b[01m\x1b[K...\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[Kdata\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.085353] (movement) StderrLine: {'line': b'   36 | nsor_msgs::msg::Joy::SharedPtr \x1b[01;31m\x1b[Kdata\x1b[m\x1b[K)\n'}
[2.085448] (movement) StderrLine: {'line': b'      |                                \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.085541] (movement) StderrLine: {'line': b'\n'}
[2.086624] (movement) StderrLine: {'line': b'\x1b[01m\x1b[K/ws/go2_ws/src/movement/include/gamepad_controller.h:36:59:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K;\x1b[m\x1b[K\xe2\x80\x99 at end of member declaration\n'}
[2.086752] (movement) StderrLine: {'line': b'   36 | _msgs::msg::Joy::SharedPtr data\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[2.086854] (movement) StderrLine: {'line': b'      |                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.086962] (movement) StderrLine: {'line': b'      |                                 \x1b[32m\x1b[K;\x1b[m\x1b[K\n'}
[2.123858] (movement) StderrLine: {'line': b'\x1b[01m\x1b[K/ws/go2_ws/src/movement/src/gamepad_controller.cpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KGamepadControl::GamepadControl()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.127898] (movement) StderrLine: {'line': b'\x1b[01m\x1b[K/ws/go2_ws/src/movement/src/gamepad_controller.cpp:12:5:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KjoySuber_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[2.128012] (movement) StderrLine: {'line': b'   12 |     \x1b[01;31m\x1b[KjoySuber_\x1b[m\x1b[K = this->create_subscription<sensor_msgs::msg::Joy>("joy", 10, std::bind(&GamepadControl::joyCallback, this, std::placeholders::_1));\n'}
[2.128107] (movement) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.136677] (-) TimerEvent: {}
[2.237627] (-) TimerEvent: {}
[2.238231] (movement) StderrLine: {'line': b'\x1b[01m\x1b[K/ws/go2_ws/src/movement/src/gamepad_controller.cpp:\x1b[m\x1b[K At global scope:\n'}
[2.238451] (movement) StderrLine: {'line': b'\x1b[01m\x1b[K/ws/go2_ws/src/movement/src/gamepad_controller.cpp:20:5:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected initializer before \xe2\x80\x98\x1b[01m\x1b[Kfloat\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.238628] (movement) StderrLine: {'line': b'   20 |     \x1b[01;31m\x1b[Kfloat\x1b[m\x1b[K vx = input.vx;\n'}
[2.238744] (movement) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[2.239961] (movement) StderrLine: {'line': b'\x1b[01m\x1b[K/ws/go2_ws/src/movement/src/gamepad_controller.cpp:21:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kinput\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[2.240120] (movement) StderrLine: {'line': b'   21 |     float vy = \x1b[01;31m\x1b[Kinput\x1b[m\x1b[K.vy;\n'}
[2.240256] (movement) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[2.240958] (movement) StderrLine: {'line': b'\x1b[01m\x1b[K/ws/go2_ws/src/movement/src/gamepad_controller.cpp:22:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kinput\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[2.241108] (movement) StderrLine: {'line': b'   22 |     float vyaw = \x1b[01;31m\x1b[Kinput\x1b[m\x1b[K.vyaw;\n'}
[2.241240] (movement) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[2.241385] (movement) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/service.hpp:34\x1b[m\x1b[K,\n'}
[2.241519] (movement) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/callback_group.hpp:25\x1b[m\x1b[K,\n'}
[2.241653] (movement) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[2.241783] (movement) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/memory_strategy.hpp:24\x1b[m\x1b[K,\n'}
[2.241909] (movement) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.242037] (movement) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.243038] (movement) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executor.hpp:33\x1b[m\x1b[K,\n'}
[2.243656] (movement) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executors/multi_threaded_executor.hpp:26\x1b[m\x1b[K,\n'}
[2.243813] (movement) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.243939] (movement) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/rclcpp.hpp:146\x1b[m\x1b[K,\n'}
[2.244081] (movement) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/ws/go2_ws/src/movement/include/gamepad_controller.h:7\x1b[m\x1b[K,\n'}
[2.244297] (movement) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/ws/go2_ws/src/movement/src/gamepad_controller.cpp:5\x1b[m\x1b[K:\n'}
[2.244496] (movement) StderrLine: {'line': b'\x1b[01m\x1b[K/ws/go2_ws/src/movement/src/gamepad_controller.cpp:24:5:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Kdo\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.245937] (movement) StderrLine: {'line': b'   24 |     \x1b[01;31m\x1b[KRCLCPP_INFO\x1b[m\x1b[K(this->get_logger(), "Gamepad input: %f, %f, %f", vx, vy, vyaw);\n'}
[2.246625] (movement) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.247681] (movement) StderrLine: {'line': b'\x1b[01m\x1b[K/ws/go2_ws/src/movement/src/gamepad_controller.cpp:24:5:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Kwhile\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.247830] (movement) StderrLine: {'line': b'   24 |     \x1b[01;31m\x1b[KRCLCPP_INFO\x1b[m\x1b[K(this->get_logger(), "Gamepad input: %f, %f, %f", vx, vy, vyaw);\n'}
[2.247999] (movement) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.248127] (movement) StderrLine: {'line': b'\x1b[01m\x1b[K/ws/go2_ws/src/movement/src/gamepad_controller.cpp:25:5:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KsportClient_\x1b[m\x1b[K\xe2\x80\x99 does not name a type; did you mean \xe2\x80\x98\x1b[01m\x1b[KSportClient\x1b[m\x1b[K\xe2\x80\x99?\n'}
[2.248331] (movement) StderrLine: {'line': b'   25 |     \x1b[01;31m\x1b[KsportClient_\x1b[m\x1b[K.Move(reqMsg_, vx, vy, vyaw);\n'}
[2.248460] (movement) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.248582] (movement) StderrLine: {'line': b'      |     \x1b[32m\x1b[KSportClient\x1b[m\x1b[K\n'}
[2.248710] (movement) StderrLine: {'line': b'\x1b[01m\x1b[K/ws/go2_ws/src/movement/src/gamepad_controller.cpp:26:5:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KreqPuber_\x1b[m\x1b[K\xe2\x80\x99 does not name a type\n'}
[2.248851] (movement) StderrLine: {'line': b'   26 |     \x1b[01;31m\x1b[KreqPuber_\x1b[m\x1b[K->publish(reqMsg_);\n'}
[2.248986] (movement) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.249115] (movement) StderrLine: {'line': b'\x1b[01m\x1b[K/ws/go2_ws/src/movement/src/gamepad_controller.cpp:27:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected declaration before \xe2\x80\x98\x1b[01m\x1b[K}\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[2.249242] (movement) StderrLine: {'line': b'   27 | \x1b[01;31m\x1b[K}\x1b[m\x1b[K\n'}
[2.249369] (movement) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[2.249502] (movement) StderrLine: {'line': b'\x1b[01m\x1b[K/ws/go2_ws/src/movement/src/gamepad_controller.cpp:29:6:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno declaration matches \xe2\x80\x98\x1b[01m\x1b[Kvoid GamepadControl::joyCallback(sensor_msgs::msg::Joy_<std::allocator<void> >::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.249637] (movement) StderrLine: {'line': b'   29 | void \x1b[01;31m\x1b[KGamepadControl\x1b[m\x1b[K::joyCallback(sensor_msgs::msg::Joy::SharedPtr data)\n'}
[2.252667] (movement) StderrLine: {'line': b'      |      \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.252813] (movement) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/ws/go2_ws/src/movement/src/gamepad_controller.cpp:5\x1b[m\x1b[K:\n'}
[2.252955] (movement) StderrLine: {'line': b'\x1b[01m\x1b[K/ws/go2_ws/src/movement/include/gamepad_controller.h:36:10:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate is: \xe2\x80\x98\x1b[01m\x1b[Kvoid GamepadControl::joyCallback(int)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.253122] (movement) StderrLine: {'line': b'   36 |     void \x1b[01;36m\x1b[KjoyCallback\x1b[m\x1b[K(sensor_msgs::msg::Joy::SharedPtr data)\n'}
[2.253253] (movement) StderrLine: {'line': b'      |          \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.253386] (movement) StderrLine: {'line': b'\x1b[01m\x1b[K/ws/go2_ws/src/movement/include/gamepad_controller.h:21:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass GamepadControl\x1b[m\x1b[K\xe2\x80\x99 defined here\n'}
[2.253520] (movement) StderrLine: {'line': b'   21 | class \x1b[01;36m\x1b[KGamepadControl\x1b[m\x1b[K : public rclcpp::Node\n'}
[2.253673] (movement) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.338629] (-) TimerEvent: {}
[2.439635] (-) TimerEvent: {}
[2.440821] (movement) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/node_interfaces/node_topics_interface.hpp:32\x1b[m\x1b[K,\n'}
[2.441071] (movement) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/node.hpp:55\x1b[m\x1b[K,\n'}
[2.441200] (movement) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[2.441361] (movement) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[2.441468] (movement) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/rclcpp.hpp:146\x1b[m\x1b[K,\n'}
[2.441587] (movement) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/ws/go2_ws/src/movement/include/gamepad_controller.h:7\x1b[m\x1b[K,\n'}
[2.441760] (movement) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/ws/go2_ws/src/movement/src/gamepad_controller.cpp:5\x1b[m\x1b[K:\n'}
[2.441932] (movement) StderrLine: {'line': b'/opt/ros/foxy/include/rclcpp/subscription_factory.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<CallbackMessageT> >) [with MessageT = sensor_msgs::msg::Joy_<std::allocator<void> >; CallbackT = std::_Bind<void (GamepadControl::*(GamepadControl*, std::_Placeholder<1>))(int)>; AllocatorT = std::allocator<void>; CallbackMessageT = int; SubscriptionT = rclcpp::Subscription<int, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<int, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<int, std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<int, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.442130] (movement) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/create_subscription.hpp:144:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::create_subscription(NodeT&&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::Joy_<std::allocator<void> >; CallbackT = std::_Bind<void (GamepadControl::*(GamepadControl*, std::_Placeholder<1>))(int)>; AllocatorT = std::allocator<void>; CallbackMessageT = int; SubscriptionT = rclcpp::Subscription<int, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<int, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<int, std::allocator<void> >; NodeT = rclcpp::Node&; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<int, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.442300] (movement) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/node_impl.hpp:98:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::Joy_<std::allocator<void> >; CallbackT = std::_Bind<void (GamepadControl::*(GamepadControl*, std::_Placeholder<1>))(int)>; AllocatorT = std::allocator<void>; CallbackMessageT = int; SubscriptionT = rclcpp::Subscription<int, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<int, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<int, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<int, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.442412] (movement) StderrLine: {'line': b'\x1b[01m\x1b[K/ws/go2_ws/src/movement/src/gamepad_controller.cpp:12:145:\x1b[m\x1b[K   required from here\n'}
[2.442501] (movement) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/subscription_factory.hpp:97:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<int, std::allocator<void> >::set(std::_Bind<void (GamepadControl::*(GamepadControl*, std::_Placeholder<1>))(int)>)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.442598] (movement) StderrLine: {'line': b'   97 |   \x1b[01;31m\x1b[Kany_subscription_callback\x1b[m\x1b[K.set(std::forward<CallbackT>(callback));\n'}
[2.442683] (movement) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.442769] (movement) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/subscription_base.hpp:29\x1b[m\x1b[K,\n'}
[2.442853] (movement) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/callback_group.hpp:26\x1b[m\x1b[K,\n'}
[2.442936] (movement) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[2.443019] (movement) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/memory_strategy.hpp:24\x1b[m\x1b[K,\n'}
[2.443102] (movement) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.443192] (movement) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.443276] (movement) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executor.hpp:33\x1b[m\x1b[K,\n'}
[2.443358] (movement) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executors/multi_threaded_executor.hpp:26\x1b[m\x1b[K,\n'}
[2.443443] (movement) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.443525] (movement) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/rclcpp.hpp:146\x1b[m\x1b[K,\n'}
[2.443612] (movement) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/ws/go2_ws/src/movement/include/gamepad_controller.h:7\x1b[m\x1b[K,\n'}
[2.443696] (movement) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/ws/go2_ws/src/movement/src/gamepad_controller.cpp:5\x1b[m\x1b[K:\n'}
[2.444617] (movement) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:83:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<int>)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>)> >::value>::type* <anonymous> = <enumerator>; MessageT = int; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.444766] (movement) StderrLine: {'line': b'   83 |   void \x1b[01;36m\x1b[Kset\x1b[m\x1b[K(CallbackT callback)\n'}
[2.444857] (movement) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.445005] (movement) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:83:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.447657] (movement) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:81:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.448769] (movement) StderrLine: {'line': b'   81 |     >::type * = \x1b[01;31m\x1b[Knullptr\x1b[m\x1b[K\n'}
[2.448938] (movement) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.449087] (movement) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:97:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<int>, const rclcpp::MessageInfo&)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>, const rclcpp::MessageInfo&)> >::value>::type* <anonymous> = <enumerator>; MessageT = int; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.449244] (movement) StderrLine: {'line': b'   97 |   void \x1b[01;36m\x1b[Kset\x1b[m\x1b[K(CallbackT callback)\n'}
[2.449405] (movement) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.449497] (movement) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:97:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.449599] (movement) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:95:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.449695] (movement) StderrLine: {'line': b'   95 |     >::type * = \x1b[01;31m\x1b[Knullptr\x1b[m\x1b[K\n'}
[2.449784] (movement) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.449874] (movement) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:111:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const int>)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const _Tp>)> >::value>::type* <anonymous> = <enumerator>; MessageT = int; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.449988] (movement) StderrLine: {'line': b'  111 |   void \x1b[01;36m\x1b[Kset\x1b[m\x1b[K(CallbackT callback)\n'}
[2.450098] (movement) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.450182] (movement) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:111:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.453639] (movement) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:109:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.453794] (movement) StderrLine: {'line': b'  109 |     >::type * = \x1b[01;31m\x1b[Knullptr\x1b[m\x1b[K\n'}
[2.453944] (movement) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.454078] (movement) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:125:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const int>, const rclcpp::MessageInfo&)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const _Tp>, const rclcpp::MessageInfo&)> >::value>::type* <anonymous> = <enumerator>; MessageT = int; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.454267] (movement) StderrLine: {'line': b'  125 |   void \x1b[01;36m\x1b[Kset\x1b[m\x1b[K(CallbackT callback)\n'}
[2.454398] (movement) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.454529] (movement) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:125:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.454667] (movement) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:123:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.454843] (movement) StderrLine: {'line': b'  123 |     >::type * = \x1b[01;31m\x1b[Knullptr\x1b[m\x1b[K\n'}
[2.454977] (movement) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.455122] (movement) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:139:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::unique_ptr<int, std::default_delete<int> >)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::unique_ptr<MessageT, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type>::rebind_alloc<MessageT>, typename std::allocator<void>::rebind<_Tp1>::other>::value, std::default_delete<_Tp>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type> >::type>)> >::value>::type* <anonymous> = <enumerator>; MessageT = int; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.455343] (movement) StderrLine: {'line': b'  139 |   void \x1b[01;36m\x1b[Kset\x1b[m\x1b[K(CallbackT callback)\n'}
[2.455481] (movement) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.455620] (movement) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:139:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.455792] (movement) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:137:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.455931] (movement) StderrLine: {'line': b'  137 |     >::type * = \x1b[01;31m\x1b[Knullptr\x1b[m\x1b[K\n'}
[2.456078] (movement) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.456203] (movement) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:153:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::unique_ptr<int, std::default_delete<int> >, const rclcpp::MessageInfo&)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::unique_ptr<MessageT, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type>::rebind_alloc<MessageT>, typename std::allocator<void>::rebind<_Tp1>::other>::value, std::default_delete<_Tp>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type> >::type>, const rclcpp::MessageInfo&)> >::value>::type* <anonymous> = <enumerator>; MessageT = int; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.456306] (movement) StderrLine: {'line': b'  153 |   void \x1b[01;36m\x1b[Kset\x1b[m\x1b[K(CallbackT callback)\n'}
[2.456395] (movement) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.456489] (movement) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:153:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.456581] (movement) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:151:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.456739] (movement) StderrLine: {'line': b'  151 |     >::type * = \x1b[01;31m\x1b[Knullptr\x1b[m\x1b[K\n'}
[2.456835] (movement) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[2.540623] (-) TimerEvent: {}
[2.641692] (-) TimerEvent: {}
[2.742621] (-) TimerEvent: {}
[2.843625] (-) TimerEvent: {}
[2.944775] (-) TimerEvent: {}
[3.045737] (-) TimerEvent: {}
[3.146694] (-) TimerEvent: {}
[3.247619] (-) TimerEvent: {}
[3.348646] (-) TimerEvent: {}
[3.449996] (-) TimerEvent: {}
[3.541139] (movement) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/9/future:48\x1b[m\x1b[K,\n'}
[3.543775] (movement) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/executors.hpp:18\x1b[m\x1b[K,\n'}
[3.543952] (movement) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/rclcpp.hpp:146\x1b[m\x1b[K,\n'}
[3.544105] (movement) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/ws/go2_ws/src/movement/include/gamepad_controller.h:7\x1b[m\x1b[K,\n'}
[3.544243] (movement) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/ws/go2_ws/src/movement/src/gamepad_controller.cpp:5\x1b[m\x1b[K:\n'}
[3.544384] (movement) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/std_function.h:667:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(_Functor) [with _Functor = rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<CallbackMessageT> >) [with MessageT = sensor_msgs::msg::Joy_<std::allocator<void> >; CallbackT = std::_Bind<void (GamepadControl::*(GamepadControl*, std::_Placeholder<1>))(int)>; AllocatorT = std::allocator<void>; CallbackMessageT = int; SubscriptionT = rclcpp::Subscription<int, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<int, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<int, std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<int, std::allocator<void> > >]::<lambda(rclcpp::node_interfaces::NodeBaseInterface*, const string&, const rclcpp::QoS&)>; <template-parameter-2-2> = void; <template-parameter-2-3> = void; _Res = std::shared_ptr<rclcpp::SubscriptionBase>; _ArgTypes = {rclcpp::node_interfaces::NodeBaseInterface*, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rclcpp::QoS&}]\x1b[m\x1b[K\xe2\x80\x99, declared using local type \xe2\x80\x98\x1b[01m\x1b[Krclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<CallbackMessageT> >) [with MessageT = sensor_msgs::msg::Joy_<std::allocator<void> >; CallbackT = std::_Bind<void (GamepadControl::*(GamepadControl*, std::_Placeholder<1>))(int)>; AllocatorT = std::allocator<void>; CallbackMessageT = int; SubscriptionT = rclcpp::Subscription<int, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<int, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<int, std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<int, std::allocator<void> > >]::<lambda(rclcpp::node_interfaces::NodeBaseInterface*, const string&, const rclcpp::QoS&)>\x1b[m\x1b[K\xe2\x80\x99, is used but never defined [\x1b[01;31m\x1b[K-fpermissive\x1b[m\x1b[K]\n'}
[3.544711] (movement) StderrLine: {'line': b'  667 |       \x1b[01;31m\x1b[Kfunction<_Res(_ArgTypes...)>\x1b[m\x1b[K::\n'}
[3.544853] (movement) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.550598] (-) TimerEvent: {}
[3.651654] (-) TimerEvent: {}
[3.715989] (movement) StderrLine: {'line': b'make[2]: *** [CMakeFiles/gamepad_controller.dir/build.make:63: CMakeFiles/gamepad_controller.dir/src/gamepad_controller.cpp.o] Error 1\n'}
[3.716729] (movement) StderrLine: {'line': b'make[1]: *** [CMakeFiles/Makefile2:82: CMakeFiles/gamepad_controller.dir/all] Error 2\n'}
[3.717159] (movement) StderrLine: {'line': b'make: *** [Makefile:141: all] Error 2\n'}
[3.726181] (movement) CommandEnded: {'returncode': 2}
[3.752688] (-) TimerEvent: {}
[3.788777] (movement) JobEnded: {'identifier': 'movement', 'rc': 2}
[3.801998] (-) EventReactorShutdown: {}
